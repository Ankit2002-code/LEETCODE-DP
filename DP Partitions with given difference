	int func(int ind ,int s1,vector<vector<int>>&dp,vector<int>&arr){
	    // if(s1==0){
	    //     return 1;
	    // }
	    if(ind==0){
	        if(s1==0&&arr[0]==0)return 2;
	        if(s1==0||s1==arr[0])return 1;
	        return 0;
	    }
	    if(dp[ind][s1]!=-1){
	        return dp[ind][s1];
	    }
	    int nottake = func(ind-1,s1,dp,arr);
	    int take = 0;
	    if(s1>=arr[ind]){
	        take = func(ind-1,s1-arr[ind],dp,arr);
	    }
	    return dp[ind][s1]=take+nottake;
	}
	int countPartitions(int n, int d, vector<int> &arr) {
	    // Write your code here.
	    int totalsum = 0;
	    for(int i =0;i<arr.size();i++){
	        totalsum+=arr[i];
	    }
	    int s1 = (totalsum-d)/2;
	    if ((totalsum - d) % 2 == 0 && totalsum - d > 0) {
	        vector<vector<int>> dp(n, vector<int>(s1 + 1, -1));
	        return func(n - 1, s1, dp, arr);
	    }
	    return 0;
}
